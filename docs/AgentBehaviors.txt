@startuml AgentBehaviors
skinparam classAttributeIconSize 0

class Customer <<Agent>>
{
__behaviors__
OrderRequester : GenericBehavior
}

class OrderProcessor <<Agent>>
{
__behaviors__
CustomerServer : Cyclic
SchedulerServer : Cyclic

}

class Order <<Agent>>
{
__behaviors__
ProductInfoServer : Cyclic

}

class Scheduler <<Agent>>
{
__behaviors__
PendingOrderRequester : Cyclic
ProductInfoRequester : GenericBehavior
DeliveryTimeRequester : GenericBehavior

KneadingRequester : GenericBehavior


}

class StreetNetwork <<Agent>>
{
__behaviors__
TimeToDeliveryServer : Cyclic

}

class KneadingAgent <<Agent>>
{
__behaviors__
KneadingServer : Cyclic
ItemPrepRequester : Generic

}

class ItemPrepAgent <<Agent>>
{
__behaviors__
ItemPrepServer : Cyclic
ProofingInformer : OneShot

}

class ProofingAgent <<Agent>>
{
__behaviors__
ReadyToBakeInformer : OneShot

}

class BakingScheduler <<Agent>>
{
__behaviors__
ReadyToBakeServer : Cyclic
BakingRequester : Generic

}

class BakingAgent <<Agent>>
{
__behaviors__
BakingServer : Cyclic
CoolProductsInformer : OneShot

}

class CoolingRacks <<Agent>>
{
__behaviors__
CoolProductsServer : Cyclic
ReadyToPackInformer : OneShot

}

class PackingScheduler <<Agent>>
{
__behaviors__
ReadyToPackServer : Cyclic
DecorationRequester : Generic

}

class DecoratorAgent <<Agent>>
{
__behaviors__
DecorationServer : Cyclic
PackingRequester : Generic

}

class PackingAgent <<Agent>>
{
__behaviors__
PackingServer : Cyclic
BoxToDeliverInformer : OneShot

}

class LoadingBay <<Agent>>
{
__behaviors__
BoxToDeliverServer : Cyclic
BoxToDeliverInformer : OneShot
}

class OrderTracker <<Agent>>
{
__behaviors__
BoxToDeliverServer : Cyclic
OrderProgressInformer : Generic
OrderTransportRequester : OneShot
}

class TransportAgent <<Agent>>
{
__behaviors__
OrderTransportServer : Cyclic
DeliveryRequester : Generic

}

class Truck <<Agent>>
{
__behaviors__
DeliveryServer : Cyclic
TimeToDeliveryRequestser : Generic
OrderDeliveredInformer : OneShot
}

class Mailbox <<Agent>>
{
__behaviors__
OrderDeliveredServer : Cyclic

}

class Clock <<Agent>>
{
__behaviors__
Timer : Ticker

}

class Visualization <<Agent>>
{
__behaviors__


}



@enduml
